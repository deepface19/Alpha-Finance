{
  "contractName": "TRXAlphaProtect",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVerifier",
          "name": "_verifier",
          "type": "address"
        },
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_denomination",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_merkleTreeHeight",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "commitment",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "leafIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "nullifierHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "denomination",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_commitment",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasher",
      "outputs": [
        {
          "internalType": "contract IHasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        }
      ],
      "name": "isSpent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_nullifierHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "isSpentArray",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "spent",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nullifierHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "contract IVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refund",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x60c06040526000600360006101000a81548163ffffffff021916908363ffffffff1602179055506000600360046101000a81548163ffffffff021916908363ffffffff1602179055503480156200005557600080fd5b50d380156200006357600080fd5b50d280156200007157600080fd5b5060405162002db038038062002db0833981810160405260808110156200009757600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505083838383808360008263ffffffff16116200012d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018062002d8d6023913960400191505060405180910390fd5b60208263ffffffff1610620001aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5f6c6576656c732073686f756c64206265206c657373207468616e203332000081525060200191505060405180910390fd5b816000806101000a81548163ffffffff021916908363ffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060005b8263ffffffff168163ffffffff1610156200025b57620002308163ffffffff166200033e60201b60201c565b600160008363ffffffff16815260200190815260200160002081905550808060010191505062000204565b50620002766001830363ffffffff166200033e60201b60201c565b60026000808152602001908152602001600020819055505050600160048190555060008211620002f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018062002d686025913960400191505060405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505081600581905550505050505050505062000a70565b60008082141562000375577f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b905062000a6b565b6001821415620003ab577f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d60001b905062000a6b565b6002821415620003e1577f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20060001b905062000a6b565b600382141562000417577f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb60001b905062000a6b565b60048214156200044d577f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c960001b905062000a6b565b600582141562000483577f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495960001b905062000a6b565b6006821415620004b9577f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c60001b905062000a6b565b6007821415620004ef577f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb460001b905062000a6b565b600882141562000525577f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8060001b905062000a6b565b60098214156200055a577e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00760001b905062000a6b565b600a82141562000590577f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3060001b905062000a6b565b600b821415620005c6577f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e560001b905062000a6b565b600c821415620005fc577f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f60001b905062000a6b565b600d82141562000632577f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd60001b905062000a6b565b600e82141562000668577f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10860001b905062000a6b565b600f8214156200069e577f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b660001b905062000a6b565b6010821415620006d4577f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185460001b905062000a6b565b60118214156200070a577f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea60001b905062000a6b565b601282141562000740577f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d60001b905062000a6b565b601382141562000776577f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0560001b905062000a6b565b6014821415620007ac577f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d460001b905062000a6b565b6015821415620007e2577f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296760001b905062000a6b565b601682141562000818577f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345360001b905062000a6b565b60178214156200084e577f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4860001b905062000a6b565b601882141562000884577f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd160001b905062000a6b565b6019821415620008ba577f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c60001b905062000a6b565b601a821415620008f0577f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9960001b905062000a6b565b601b82141562000926577f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35460001b905062000a6b565b601c8214156200095b577e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d60001b905062000a6b565b601d82141562000991577f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42760001b905062000a6b565b601e821415620009c7577f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb60001b905062000a6b565b601f821415620009fd577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc60001b905062000a6b565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b919050565b60805160601c60a05160601c6122c462000aa460003980610bcd5280610e65525080611c0d5280611fed52506122c46000f3fe60806040526004361061012a5760003560e01c80639fa12d0b116100ab578063e5285dcc1161006f578063e5285dcc1461077b578063e8295588146107e6578063ec7329591461084f578063ed33639f14610894578063f178e47c146108ef578063fc7e9c6f146109585761012a565b80639fa12d0b1461055f578063b214faa514610654578063ba70f75714610682578063c2b40ae4146106c7578063cd87a3b4146107305761012a565b80636d9833e3116100f25780636d9833e314610366578063839df945146103d15780638bca6d161461043c5780638ea3099e1461048157806390eeb02b146105145761012a565b806317cc915c1461012f57806321a0adb61461019a5780632b7ac3f31461027b578063414a37ba146102d65780634ecf518b1461031b575b600080fd5b34801561013b57600080fd5b50d3801561014857600080fd5b50d2801561015557600080fd5b506101826004803603602081101561016c57600080fd5b81019080803590602001909291905050506109a3565b60405180821515815260200191505060405180910390f35b610279600480360360e08110156101b057600080fd5b81019080803590602001906401000000008111156101cd57600080fd5b8201836020820111156101df57600080fd5b8035906020019184600183028401116401000000008311171561020157600080fd5b90919293919293908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506109c3565b005b34801561028757600080fd5b50d3801561029457600080fd5b50d280156102a157600080fd5b506102aa610e63565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e257600080fd5b50d380156102ef57600080fd5b50d280156102fc57600080fd5b50610305610e87565b6040518082815260200191505060405180910390f35b34801561032757600080fd5b50d3801561033457600080fd5b50d2801561034157600080fd5b5061034a610eab565b604051808263ffffffff16815260200191505060405180910390f35b34801561037257600080fd5b50d3801561037f57600080fd5b50d2801561038c57600080fd5b506103b9600480360360208110156103a357600080fd5b8101908080359060200190929190505050610ebf565b60405180821515815260200191505060405180910390f35b3480156103dd57600080fd5b50d380156103ea57600080fd5b50d280156103f757600080fd5b506104246004803603602081101561040e57600080fd5b8101908080359060200190929190505050610f5b565b60405180821515815260200191505060405180910390f35b34801561044857600080fd5b50d3801561045557600080fd5b50d2801561046257600080fd5b5061046b610f7b565b6040518082815260200191505060405180910390f35b34801561048d57600080fd5b50d3801561049a57600080fd5b50d280156104a757600080fd5b506104fe600480360360608110156104be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610f81565b6040518082815260200191505060405180910390f35b34801561052057600080fd5b50d3801561052d57600080fd5b50d2801561053a57600080fd5b50610543611229565b604051808263ffffffff16815260200191505060405180910390f35b34801561056b57600080fd5b50d3801561057857600080fd5b50d2801561058557600080fd5b506105fd6004803603602081101561059c57600080fd5b81019080803590602001906401000000008111156105b957600080fd5b8201836020820111156105cb57600080fd5b803590602001918460208302840111640100000000831117156105ed57600080fd5b909192939192939050505061123f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610640578082015181840152602081019050610625565b505050509050019250505060405180910390f35b6106806004803603602081101561066a57600080fd5b81019080803590602001909291905050506112f0565b005b34801561068e57600080fd5b50d3801561069b57600080fd5b50d280156106a857600080fd5b506106b161147b565b6040518082815260200191505060405180910390f35b3480156106d357600080fd5b50d380156106e057600080fd5b50d280156106ed57600080fd5b5061071a6004803603602081101561070457600080fd5b81019080803590602001909291905050506114ae565b6040518082815260200191505060405180910390f35b34801561073c57600080fd5b50d3801561074957600080fd5b50d2801561075657600080fd5b5061075f6114c6565b604051808263ffffffff16815260200191505060405180910390f35b34801561078757600080fd5b50d3801561079457600080fd5b50d280156107a157600080fd5b506107ce600480360360208110156107b857600080fd5b81019080803590602001909291905050506114cb565b60405180821515815260200191505060405180910390f35b3480156107f257600080fd5b50d380156107ff57600080fd5b50d2801561080c57600080fd5b506108396004803603602081101561082357600080fd5b81019080803590602001909291905050506114f5565b6040518082815260200191505060405180910390f35b34801561085b57600080fd5b50d3801561086857600080fd5b50d2801561087557600080fd5b5061087e611be7565b6040518082815260200191505060405180910390f35b3480156108a057600080fd5b50d380156108ad57600080fd5b50d280156108ba57600080fd5b506108c3611c0b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108fb57600080fd5b50d3801561090857600080fd5b50d2801561091557600080fd5b506109426004803603602081101561092c57600080fd5b8101908080359060200190929190505050611c2f565b6040518082815260200191505060405180910390f35b34801561096457600080fd5b50d3801561097157600080fd5b50d2801561097e57600080fd5b50610987611c47565b604051808263ffffffff16815260200191505060405180910390f35b60066020528060005260406000206000915054906101000a900460ff1681565b60026004541415610a3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b6002600481905550600554821115610abc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4665652065786365656473207472616e736665722076616c756500000000000081525060200191505060405180910390fd5b6006600086815260200190815260200160002060009054906101000a900460ff1615610b50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f546865206e6f746520686173206265656e20616c7265616479207370656e740081525060200191505060405180910390fd5b610b5986610ebf565b610bcb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f740000000081525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663695ef6f989896040518060c001604052808b60001c81526020018a60001c81526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b83811015610ca6578082015181840152602081019050610c8b565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015610cf857600080fd5b505af1158015610d0c573d6000803e3d6000fd5b505050506040513d6020811015610d2257600080fd5b8101908080519060200190929190505050610da5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642077697468647261772070726f6f660000000000000000000081525060200191505060405180910390fd5b60016006600087815260200190815260200160002060006101000a81548160ff021916908315150217905550610ddd84848484611c5d565b8273ffffffffffffffffffffffffffffffffffffffff167fe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c34931858785604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a260016004819055505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b60008054906101000a900463ffffffff1681565b60008060001b821415610ed55760009050610f56565b6000600360009054906101000a900463ffffffff16905060008190505b600260008263ffffffff16815260200190815260200160002054841415610f1e57600192505050610f56565b60008163ffffffff161415610f3257601e90505b8080600190039150508163ffffffff168163ffffffff161415610ef2576000925050505b919050565b60076020528060005260406000206000915054906101000a900460ff1681565b60055481565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c1061101b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5f6c6566742073686f756c6420626520696e7369646520746865206669656c6481525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c10611096576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061216c6021913960400191505060405180910390fd5b60008360001c905060008573ffffffffffffffffffffffffffffffffffffffff1663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156110f857600080fd5b505afa15801561110c573d6000803e3d6000fd5b505050506040513d604081101561112257600080fd5b81019080805190602001909291908051906020019092919050505080925081935050507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018061116d57fe5b8460001c830891508573ffffffffffffffffffffffffffffffffffffffff1663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156111cd57600080fd5b505afa1580156111e1573d6000803e3d6000fd5b505050506040513d60408110156111f757600080fd5b81019080805190602001909291908051906020019092919050505080925081935050508160001b925050509392505050565b600360009054906101000a900463ffffffff1681565b60608282905067ffffffffffffffff8111801561125b57600080fd5b5060405190808252806020026020018201604052801561128a5781602001602082028036833780820191505090505b50905060005b838390508110156112e9576112b68484838181106112aa57fe5b905060200201356114cb565b156112dc5760018282815181106112c957fe5b6020026020010190151590811515815250505b8080600101915050611290565b5092915050565b60026004541415611369576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b60026004819055506007600082815260200190815260200160002060009054906101000a900460ff16156113e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806121c16021913960400191505060405180910390fd5b60006113f382611ea2565b905060016007600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506114296120d7565b817fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff1968242604051808363ffffffff1681526020018281526020019250505060405180910390a250600160048190555050565b600060026000600360009054906101000a900463ffffffff1663ffffffff16815260200190815260200160002054905090565b60026020528060005260406000206000915090505481565b601e81565b60006006600083815260200190815260200160002060009054906101000a900460ff169050919050565b60008082141561152a577f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b9050611be2565b600182141561155e577f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d60001b9050611be2565b6002821415611592577f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20060001b9050611be2565b60038214156115c6577f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb60001b9050611be2565b60048214156115fa577f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c960001b9050611be2565b600582141561162e577f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495960001b9050611be2565b6006821415611662577f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c60001b9050611be2565b6007821415611696577f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb460001b9050611be2565b60088214156116ca577f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8060001b9050611be2565b60098214156116fd577e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00760001b9050611be2565b600a821415611731577f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3060001b9050611be2565b600b821415611765577f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e560001b9050611be2565b600c821415611799577f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f60001b9050611be2565b600d8214156117cd577f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd60001b9050611be2565b600e821415611801577f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10860001b9050611be2565b600f821415611835577f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b660001b9050611be2565b6010821415611869577f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185460001b9050611be2565b601182141561189d577f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea60001b9050611be2565b60128214156118d1577f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d60001b9050611be2565b6013821415611905577f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0560001b9050611be2565b6014821415611939577f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d460001b9050611be2565b601582141561196d577f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296760001b9050611be2565b60168214156119a1577f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345360001b9050611be2565b60178214156119d5577f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4860001b9050611be2565b6018821415611a09577f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd160001b9050611be2565b6019821415611a3d577f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c60001b9050611be2565b601a821415611a71577f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9960001b9050611be2565b601b821415611aa5577f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35460001b9050611be2565b601c821415611ad8577e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d60001b9050611be2565b601d821415611b0c577f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42760001b9050611be2565b601e821415611b40577f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb60001b9050611be2565b601f821415611b74577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc60001b9050611be2565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b919050565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020528060005260406000206000915090505481565b600360049054906101000a900463ffffffff1681565b60003414611cb6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603581526020018061225a6035913960400191505060405180910390fd5b60008114611d0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603481526020018061218d6034913960400191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16836005540360405180600001905060006040518083038185875af1925050503d8060008114611d73576040519150601f19603f3d011682016040523d82523d6000602084013e611d78565b606091505b5050905080611dd2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806121e26025913960400191505060405180910390fd5b6000831115611e9b578373ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d8060008114611e39576040519150601f19603f3d011682016040523d82523d6000602084013e611e3e565b606091505b50508091505080611e9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806122076023913960400191505060405180910390fd5b5b5050505050565b600080600360049054906101000a900463ffffffff16905060008054906101000a900463ffffffff1663ffffffff16600263ffffffff160a63ffffffff168163ffffffff161415611f3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061222a6030913960400191505060405180910390fd5b6000819050600084905060008060005b60008054906101000a900463ffffffff1663ffffffff168163ffffffff16101561203557600060028663ffffffff1681611f8457fe5b0663ffffffff161415611fc857839250611fa38163ffffffff166114f5565b915083600160008363ffffffff16815260200190815260200160002081905550611fe8565b600160008263ffffffff1681526020019081526020016000205492508391505b6120137f00000000000000000000000000000000000000000000000000000000000000008484610f81565b935060028563ffffffff168161202557fe5b0494508080600101915050611f4e565b506000601e63ffffffff166001600360009054906101000a900463ffffffff160163ffffffff168161206357fe5b06905080600360006101000a81548163ffffffff021916908363ffffffff16021790555083600260008363ffffffff1681526020019081526020016000208190555060018601600360046101000a81548163ffffffff021916908363ffffffff160217905550859650505050505050919050565b6005543414612131576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806121346038913960400191505060405180910390fd5b56fe506c656173652073656e6420606d697844656e6f6d696e6174696f6e602054525820616c6f6e672077697468207472616e73616374696f6e5f72696768742073686f756c6420626520696e7369646520746865206669656c64526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e636554686520636f6d6d69746d656e7420686173206265656e207375626d69747465647061796d656e7420746f205f726563697069656e7420646964206e6f7420676f20746872757061796d656e7420746f205f72656c6179657220646964206e6f7420676f20746872754d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e2062652061646465644d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365a2646970667358221220c07157fe880de08ac58d114113e2f3a683562b4267841122c8bf0b012c0de53964736f6c6343000706003364656e6f6d696e6174696f6e2073686f756c642062652067726561746572207468616e20305f6c6576656c732073686f756c642062652067726561746572207468616e207a65726f",
  "deployedBytecode": "0x60806040526004361061012a5760003560e01c80639fa12d0b116100ab578063e5285dcc1161006f578063e5285dcc1461077b578063e8295588146107e6578063ec7329591461084f578063ed33639f14610894578063f178e47c146108ef578063fc7e9c6f146109585761012a565b80639fa12d0b1461055f578063b214faa514610654578063ba70f75714610682578063c2b40ae4146106c7578063cd87a3b4146107305761012a565b80636d9833e3116100f25780636d9833e314610366578063839df945146103d15780638bca6d161461043c5780638ea3099e1461048157806390eeb02b146105145761012a565b806317cc915c1461012f57806321a0adb61461019a5780632b7ac3f31461027b578063414a37ba146102d65780634ecf518b1461031b575b600080fd5b34801561013b57600080fd5b50d3801561014857600080fd5b50d2801561015557600080fd5b506101826004803603602081101561016c57600080fd5b81019080803590602001909291905050506109a3565b60405180821515815260200191505060405180910390f35b610279600480360360e08110156101b057600080fd5b81019080803590602001906401000000008111156101cd57600080fd5b8201836020820111156101df57600080fd5b8035906020019184600183028401116401000000008311171561020157600080fd5b90919293919293908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506109c3565b005b34801561028757600080fd5b50d3801561029457600080fd5b50d280156102a157600080fd5b506102aa610e63565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e257600080fd5b50d380156102ef57600080fd5b50d280156102fc57600080fd5b50610305610e87565b6040518082815260200191505060405180910390f35b34801561032757600080fd5b50d3801561033457600080fd5b50d2801561034157600080fd5b5061034a610eab565b604051808263ffffffff16815260200191505060405180910390f35b34801561037257600080fd5b50d3801561037f57600080fd5b50d2801561038c57600080fd5b506103b9600480360360208110156103a357600080fd5b8101908080359060200190929190505050610ebf565b60405180821515815260200191505060405180910390f35b3480156103dd57600080fd5b50d380156103ea57600080fd5b50d280156103f757600080fd5b506104246004803603602081101561040e57600080fd5b8101908080359060200190929190505050610f5b565b60405180821515815260200191505060405180910390f35b34801561044857600080fd5b50d3801561045557600080fd5b50d2801561046257600080fd5b5061046b610f7b565b6040518082815260200191505060405180910390f35b34801561048d57600080fd5b50d3801561049a57600080fd5b50d280156104a757600080fd5b506104fe600480360360608110156104be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610f81565b6040518082815260200191505060405180910390f35b34801561052057600080fd5b50d3801561052d57600080fd5b50d2801561053a57600080fd5b50610543611229565b604051808263ffffffff16815260200191505060405180910390f35b34801561056b57600080fd5b50d3801561057857600080fd5b50d2801561058557600080fd5b506105fd6004803603602081101561059c57600080fd5b81019080803590602001906401000000008111156105b957600080fd5b8201836020820111156105cb57600080fd5b803590602001918460208302840111640100000000831117156105ed57600080fd5b909192939192939050505061123f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610640578082015181840152602081019050610625565b505050509050019250505060405180910390f35b6106806004803603602081101561066a57600080fd5b81019080803590602001909291905050506112f0565b005b34801561068e57600080fd5b50d3801561069b57600080fd5b50d280156106a857600080fd5b506106b161147b565b6040518082815260200191505060405180910390f35b3480156106d357600080fd5b50d380156106e057600080fd5b50d280156106ed57600080fd5b5061071a6004803603602081101561070457600080fd5b81019080803590602001909291905050506114ae565b6040518082815260200191505060405180910390f35b34801561073c57600080fd5b50d3801561074957600080fd5b50d2801561075657600080fd5b5061075f6114c6565b604051808263ffffffff16815260200191505060405180910390f35b34801561078757600080fd5b50d3801561079457600080fd5b50d280156107a157600080fd5b506107ce600480360360208110156107b857600080fd5b81019080803590602001909291905050506114cb565b60405180821515815260200191505060405180910390f35b3480156107f257600080fd5b50d380156107ff57600080fd5b50d2801561080c57600080fd5b506108396004803603602081101561082357600080fd5b81019080803590602001909291905050506114f5565b6040518082815260200191505060405180910390f35b34801561085b57600080fd5b50d3801561086857600080fd5b50d2801561087557600080fd5b5061087e611be7565b6040518082815260200191505060405180910390f35b3480156108a057600080fd5b50d380156108ad57600080fd5b50d280156108ba57600080fd5b506108c3611c0b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108fb57600080fd5b50d3801561090857600080fd5b50d2801561091557600080fd5b506109426004803603602081101561092c57600080fd5b8101908080359060200190929190505050611c2f565b6040518082815260200191505060405180910390f35b34801561096457600080fd5b50d3801561097157600080fd5b50d2801561097e57600080fd5b50610987611c47565b604051808263ffffffff16815260200191505060405180910390f35b60066020528060005260406000206000915054906101000a900460ff1681565b60026004541415610a3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b6002600481905550600554821115610abc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4665652065786365656473207472616e736665722076616c756500000000000081525060200191505060405180910390fd5b6006600086815260200190815260200160002060009054906101000a900460ff1615610b50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f546865206e6f746520686173206265656e20616c7265616479207370656e740081525060200191505060405180910390fd5b610b5986610ebf565b610bcb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f740000000081525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663695ef6f989896040518060c001604052808b60001c81526020018a60001c81526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b83811015610ca6578082015181840152602081019050610c8b565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015610cf857600080fd5b505af1158015610d0c573d6000803e3d6000fd5b505050506040513d6020811015610d2257600080fd5b8101908080519060200190929190505050610da5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642077697468647261772070726f6f660000000000000000000081525060200191505060405180910390fd5b60016006600087815260200190815260200160002060006101000a81548160ff021916908315150217905550610ddd84848484611c5d565b8273ffffffffffffffffffffffffffffffffffffffff167fe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c34931858785604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a260016004819055505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b60008054906101000a900463ffffffff1681565b60008060001b821415610ed55760009050610f56565b6000600360009054906101000a900463ffffffff16905060008190505b600260008263ffffffff16815260200190815260200160002054841415610f1e57600192505050610f56565b60008163ffffffff161415610f3257601e90505b8080600190039150508163ffffffff168163ffffffff161415610ef2576000925050505b919050565b60076020528060005260406000206000915054906101000a900460ff1681565b60055481565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c1061101b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5f6c6566742073686f756c6420626520696e7369646520746865206669656c6481525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c10611096576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061216c6021913960400191505060405180910390fd5b60008360001c905060008573ffffffffffffffffffffffffffffffffffffffff1663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156110f857600080fd5b505afa15801561110c573d6000803e3d6000fd5b505050506040513d604081101561112257600080fd5b81019080805190602001909291908051906020019092919050505080925081935050507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018061116d57fe5b8460001c830891508573ffffffffffffffffffffffffffffffffffffffff1663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156111cd57600080fd5b505afa1580156111e1573d6000803e3d6000fd5b505050506040513d60408110156111f757600080fd5b81019080805190602001909291908051906020019092919050505080925081935050508160001b925050509392505050565b600360009054906101000a900463ffffffff1681565b60608282905067ffffffffffffffff8111801561125b57600080fd5b5060405190808252806020026020018201604052801561128a5781602001602082028036833780820191505090505b50905060005b838390508110156112e9576112b68484838181106112aa57fe5b905060200201356114cb565b156112dc5760018282815181106112c957fe5b6020026020010190151590811515815250505b8080600101915050611290565b5092915050565b60026004541415611369576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b60026004819055506007600082815260200190815260200160002060009054906101000a900460ff16156113e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806121c16021913960400191505060405180910390fd5b60006113f382611ea2565b905060016007600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506114296120d7565b817fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff1968242604051808363ffffffff1681526020018281526020019250505060405180910390a250600160048190555050565b600060026000600360009054906101000a900463ffffffff1663ffffffff16815260200190815260200160002054905090565b60026020528060005260406000206000915090505481565b601e81565b60006006600083815260200190815260200160002060009054906101000a900460ff169050919050565b60008082141561152a577f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b9050611be2565b600182141561155e577f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d60001b9050611be2565b6002821415611592577f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20060001b9050611be2565b60038214156115c6577f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb60001b9050611be2565b60048214156115fa577f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c960001b9050611be2565b600582141561162e577f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495960001b9050611be2565b6006821415611662577f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c60001b9050611be2565b6007821415611696577f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb460001b9050611be2565b60088214156116ca577f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8060001b9050611be2565b60098214156116fd577e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00760001b9050611be2565b600a821415611731577f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3060001b9050611be2565b600b821415611765577f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e560001b9050611be2565b600c821415611799577f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f60001b9050611be2565b600d8214156117cd577f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd60001b9050611be2565b600e821415611801577f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10860001b9050611be2565b600f821415611835577f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b660001b9050611be2565b6010821415611869577f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185460001b9050611be2565b601182141561189d577f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea60001b9050611be2565b60128214156118d1577f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d60001b9050611be2565b6013821415611905577f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0560001b9050611be2565b6014821415611939577f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d460001b9050611be2565b601582141561196d577f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296760001b9050611be2565b60168214156119a1577f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345360001b9050611be2565b60178214156119d5577f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4860001b9050611be2565b6018821415611a09577f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd160001b9050611be2565b6019821415611a3d577f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c60001b9050611be2565b601a821415611a71577f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9960001b9050611be2565b601b821415611aa5577f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35460001b9050611be2565b601c821415611ad8577e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d60001b9050611be2565b601d821415611b0c577f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42760001b9050611be2565b601e821415611b40577f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb60001b9050611be2565b601f821415611b74577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc60001b9050611be2565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b919050565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020528060005260406000206000915090505481565b600360049054906101000a900463ffffffff1681565b60003414611cb6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603581526020018061225a6035913960400191505060405180910390fd5b60008114611d0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603481526020018061218d6034913960400191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16836005540360405180600001905060006040518083038185875af1925050503d8060008114611d73576040519150601f19603f3d011682016040523d82523d6000602084013e611d78565b606091505b5050905080611dd2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806121e26025913960400191505060405180910390fd5b6000831115611e9b578373ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d8060008114611e39576040519150601f19603f3d011682016040523d82523d6000602084013e611e3e565b606091505b50508091505080611e9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806122076023913960400191505060405180910390fd5b5b5050505050565b600080600360049054906101000a900463ffffffff16905060008054906101000a900463ffffffff1663ffffffff16600263ffffffff160a63ffffffff168163ffffffff161415611f3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061222a6030913960400191505060405180910390fd5b6000819050600084905060008060005b60008054906101000a900463ffffffff1663ffffffff168163ffffffff16101561203557600060028663ffffffff1681611f8457fe5b0663ffffffff161415611fc857839250611fa38163ffffffff166114f5565b915083600160008363ffffffff16815260200190815260200160002081905550611fe8565b600160008263ffffffff1681526020019081526020016000205492508391505b6120137f00000000000000000000000000000000000000000000000000000000000000008484610f81565b935060028563ffffffff168161202557fe5b0494508080600101915050611f4e565b506000601e63ffffffff166001600360009054906101000a900463ffffffff160163ffffffff168161206357fe5b06905080600360006101000a81548163ffffffff021916908363ffffffff16021790555083600260008363ffffffff1681526020019081526020016000208190555060018601600360046101000a81548163ffffffff021916908363ffffffff160217905550859650505050505050919050565b6005543414612131576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806121346038913960400191505060405180910390fd5b56fe506c656173652073656e6420606d697844656e6f6d696e6174696f6e602054525820616c6f6e672077697468207472616e73616374696f6e5f72696768742073686f756c6420626520696e7369646520746865206669656c64526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e636554686520636f6d6d69746d656e7420686173206265656e207375626d69747465647061796d656e7420746f205f726563697069656e7420646964206e6f7420676f20746872757061796d656e7420746f205f72656c6179657220646964206e6f7420676f20746872754d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e2062652061646465644d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365a2646970667358221220c07157fe880de08ac58d114113e2f3a683562b4267841122c8bf0b012c0de53964736f6c63430007060033",
  "sourceMap": "59:1046:4:-:0;;;1012:1:2;979:34;;;;;;;;;;;;;;;;;;;;1043:1;1017:27;;;;;;;;;;;;;;;;;;;;105:192:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;242:9;253:7;262:13;277:17;1184::1;1203:7;1118:1:2;1108:7;:11;;;1100:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1183:2;1173:7;:12;;;1165:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1235:7;1226:6;;:16;;;;;;;;;;;;;;;;;;1257:7;1248:16;;;;;;;;;;;;1276:8;1271:80;1294:7;1290:11;;:1;:11;;;1271:80;;;1336:8;1342:1;1336:8;;:5;;;:8;;:::i;:::-;1316:14;:17;1331:1;1316:17;;;;;;;;;;;;;:28;;;;1303:3;;;;;;;1271:80;;;;1368:18;1384:1;1374:7;:11;1368:18;;:5;;;:18;;:::i;:::-;1357:5;:8;1363:1;1357:8;;;;;;;;;;;:29;;;;1049:342;;1634:1:3;1745:7;:22;;;;1243:1:1::1;1227:13;:17;1219:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:9;1293:20;;;;;;;;;;::::0;::::1;1335:13;1320:12;:28;;;;1038:316:::0;;;;105:192:4;;;;59:1046;;3526:3478:2;3573:7;3597:1;3592;:6;3588:3411;;;3615:66;3607:75;;3600:82;;;;3588:3411;3702:1;3697;:6;3693:3306;;;3720:66;3712:75;;3705:82;;;;3693:3306;3807:1;3802;:6;3798:3201;;;3825:66;3817:75;;3810:82;;;;3798:3201;3912:1;3907;:6;3903:3096;;;3930:66;3922:75;;3915:82;;;;3903:3096;4017:1;4012;:6;4008:2991;;;4035:66;4027:75;;4020:82;;;;4008:2991;4122:1;4117;:6;4113:2886;;;4140:66;4132:75;;4125:82;;;;4113:2886;4227:1;4222;:6;4218:2781;;;4245:66;4237:75;;4230:82;;;;4218:2781;4332:1;4327;:6;4323:2676;;;4350:66;4342:75;;4335:82;;;;4323:2676;4437:1;4432;:6;4428:2571;;;4455:66;4447:75;;4440:82;;;;4428:2571;4542:1;4537;:6;4533:2466;;;4560:66;4552:75;;4545:82;;;;4533:2466;4647:2;4642:1;:7;4638:2361;;;4666:66;4658:75;;4651:82;;;;4638:2361;4753:2;4748:1;:7;4744:2255;;;4772:66;4764:75;;4757:82;;;;4744:2255;4859:2;4854:1;:7;4850:2149;;;4878:66;4870:75;;4863:82;;;;4850:2149;4965:2;4960:1;:7;4956:2043;;;4984:66;4976:75;;4969:82;;;;4956:2043;5071:2;5066:1;:7;5062:1937;;;5090:66;5082:75;;5075:82;;;;5062:1937;5177:2;5172:1;:7;5168:1831;;;5196:66;5188:75;;5181:82;;;;5168:1831;5283:2;5278:1;:7;5274:1725;;;5302:66;5294:75;;5287:82;;;;5274:1725;5389:2;5384:1;:7;5380:1619;;;5408:66;5400:75;;5393:82;;;;5380:1619;5495:2;5490:1;:7;5486:1513;;;5514:66;5506:75;;5499:82;;;;5486:1513;5601:2;5596:1;:7;5592:1407;;;5620:66;5612:75;;5605:82;;;;5592:1407;5707:2;5702:1;:7;5698:1301;;;5726:66;5718:75;;5711:82;;;;5698:1301;5813:2;5808:1;:7;5804:1195;;;5832:66;5824:75;;5817:82;;;;5804:1195;5919:2;5914:1;:7;5910:1089;;;5938:66;5930:75;;5923:82;;;;5910:1089;6025:2;6020:1;:7;6016:983;;;6044:66;6036:75;;6029:82;;;;6016:983;6131:2;6126:1;:7;6122:877;;;6150:66;6142:75;;6135:82;;;;6122:877;6237:2;6232:1;:7;6228:771;;;6256:66;6248:75;;6241:82;;;;6228:771;6343:2;6338:1;:7;6334:665;;;6362:66;6354:75;;6347:82;;;;6334:665;6449:2;6444:1;:7;6440:559;;;6468:66;6460:75;;6453:82;;;;6440:559;6555:2;6550:1;:7;6546:453;;;6574:66;6566:75;;6559:82;;;;6546:453;6661:2;6656:1;:7;6652:347;;;6680:66;6672:75;;6665:82;;;;6652:347;6767:2;6762:1;:7;6758:241;;;6786:66;6778:75;;6771:82;;;;6758:241;6873:2;6868:1;:7;6864:135;;;6892:66;6884:75;;6877:82;;;;6864:135;6970:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3526:3478;;;;:::o;59:1046:4:-;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "59:1046:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;377:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2457:878;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;303:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;215:114:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;519:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2907:394;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;521:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;343:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1463:480:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;979:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3790:305:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1608:332;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3347:94:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;886:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;930:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3607:119:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3526:3478:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;333:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;483:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;833:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1017:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;377:47:1;;;;;;;;;;;;;;;;;;;;;;:::o;2457:878::-;1678:1:3;2276:7;;:19;;2268:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1678:1;2409:7;:18;;;;2715:12:1::1;;2707:4;:20;;2699:59;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2774:15;:31;2790:14;2774:31;;;;;;;;;;;;;;;;;;;;;2773:32;2765:76;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2856:18;2868:5;2856:11;:18::i;:::-;2848:59;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2963:8;:20;;;2994:6;;2963:153;;;;;;;;3020:5;3012:14;;2963:153;;;;3036:14;3028:23;;2963:153;;;;3061:10;3053:19;;2963:153;;;;3082:8;3074:17;;2963:153;;;;3093:4;2963:153;;;;3099:7;2963:153;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;2947:209;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3199:4;3165:15;:31;3181:14;3165:31;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;3210:53;3227:10;3239:8;3249:4;3255:7;3210:16;:53::i;:::-;3314:8;3275:54;;;3286:10;3298:14;3324:4;3275:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1634:1:3::0;2588:7;:22;;;;2457:878:1;;;;;;;;:::o;303:35::-;;;:::o;215:114:2:-;252:77;215:114;:::o;519:20::-;;;;;;;;;;;;:::o;2907:394::-;2964:4;2989:1;2980:10;;:5;:10;2976:43;;;3007:5;3000:12;;;;2976:43;3024:24;3051:16;;;;;;;;;;;3024:43;;3073:8;3084:17;3073:28;;3107:172;3131:5;:8;3137:1;3131:8;;;;;;;;;;;;;;3122:5;:17;3118:53;;;3158:4;3151:11;;;;;;3118:53;3187:1;3182;:6;;;3178:52;;;973:2;3200:21;;3178:52;3237:3;;;;;;;;3260:17;3255:22;;:1;:22;;;;3107:172;;3291:5;3284:12;;;;2907:394;;;;:::o;521:43:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;343:27::-;;;;:::o;1463:480:2:-;1571:7;252:77;1602:5;1594:14;;:27;1586:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;252:77;1680:6;1672:15;;:28;1664:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1744:9;1764:5;1756:14;;1744:26;;1776:9;1804:7;:18;;;1823:1;1826;1804:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:33;;;;;;;;252:77;1838:38;;;;;1856:6;1848:15;;1845:1;1838:38;1834:42;;1891:7;:18;;;1910:1;1913;1891:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:33;;;;;;;;1936:1;1928:10;;1921:17;;;;1463:480;;;;;:::o;979:34::-;;;;;;;;;;;;;:::o;3790:305:1:-;3872:19;3919:16;;:23;;3908:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3900:43;;3955:9;3950:140;3974:16;;:23;;3970:1;:27;3950:140;;;4017:28;4025:16;;4042:1;4025:19;;;;;;;;;;;;;4017:7;:28::i;:::-;4013:70;;;4069:4;4058:5;4064:1;4058:8;;;;;;;;;;;;;:15;;;;;;;;;;;4013:70;3999:3;;;;;;;3950:140;;;;3790:305;;;;:::o;1608:332::-;1678:1:3;2276:7;;:19;;2268:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1678:1;2409:7;:18;;;;1692:11:1::1;:24;1704:11;1692:24;;;;;;;;;;;;;;;;;;;;;1691:25;1683:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1763:20;1786;1794:11;1786:7;:20::i;:::-;1763:43;;1840:4;1813:11;:24;1825:11;1813:24;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1851:17;:15;:17::i;:::-;1890:11;1882:52;1903:13;1918:15;1882:52;;;;;;;;;;;;;;;;;;;;;;;;;;2440:1:3;1634::::0;2588:7;:22;;;;1608:332:1;:::o;3347:94:2:-;3391:7;3413:5;:23;3419:16;;;;;;;;;;;3413:23;;;;;;;;;;;;;;3406:30;;3347:94;:::o;886:40::-;;;;;;;;;;;;;;;;;:::o;930:45::-;973:2;930:45;:::o;3607:119:1:-;3669:4;3689:15;:31;3705:14;3689:31;;;;;;;;;;;;;;;;;;;;;3682:38;;3607:119;;;:::o;3526:3478:2:-;3573:7;3597:1;3592;:6;3588:3411;;;3615:66;3607:75;;3600:82;;;;3588:3411;3702:1;3697;:6;3693:3306;;;3720:66;3712:75;;3705:82;;;;3693:3306;3807:1;3802;:6;3798:3201;;;3825:66;3817:75;;3810:82;;;;3798:3201;3912:1;3907;:6;3903:3096;;;3930:66;3922:75;;3915:82;;;;3903:3096;4017:1;4012;:6;4008:2991;;;4035:66;4027:75;;4020:82;;;;4008:2991;4122:1;4117;:6;4113:2886;;;4140:66;4132:75;;4125:82;;;;4113:2886;4227:1;4222;:6;4218:2781;;;4245:66;4237:75;;4230:82;;;;4218:2781;4332:1;4327;:6;4323:2676;;;4350:66;4342:75;;4335:82;;;;4323:2676;4437:1;4432;:6;4428:2571;;;4455:66;4447:75;;4440:82;;;;4428:2571;4542:1;4537;:6;4533:2466;;;4560:66;4552:75;;4545:82;;;;4533:2466;4647:2;4642:1;:7;4638:2361;;;4666:66;4658:75;;4651:82;;;;4638:2361;4753:2;4748:1;:7;4744:2255;;;4772:66;4764:75;;4757:82;;;;4744:2255;4859:2;4854:1;:7;4850:2149;;;4878:66;4870:75;;4863:82;;;;4850:2149;4965:2;4960:1;:7;4956:2043;;;4984:66;4976:75;;4969:82;;;;4956:2043;5071:2;5066:1;:7;5062:1937;;;5090:66;5082:75;;5075:82;;;;5062:1937;5177:2;5172:1;:7;5168:1831;;;5196:66;5188:75;;5181:82;;;;5168:1831;5283:2;5278:1;:7;5274:1725;;;5302:66;5294:75;;5287:82;;;;5274:1725;5389:2;5384:1;:7;5380:1619;;;5408:66;5400:75;;5393:82;;;;5380:1619;5495:2;5490:1;:7;5486:1513;;;5514:66;5506:75;;5499:82;;;;5486:1513;5601:2;5596:1;:7;5592:1407;;;5620:66;5612:75;;5605:82;;;;5592:1407;5707:2;5702:1;:7;5698:1301;;;5726:66;5718:75;;5711:82;;;;5698:1301;5813:2;5808:1;:7;5804:1195;;;5832:66;5824:75;;5817:82;;;;5804:1195;5919:2;5914:1;:7;5910:1089;;;5938:66;5930:75;;5923:82;;;;5910:1089;6025:2;6020:1;:7;6016:983;;;6044:66;6036:75;;6029:82;;;;6016:983;6131:2;6126:1;:7;6122:877;;;6150:66;6142:75;;6135:82;;;;6122:877;6237:2;6232:1;:7;6228:771;;;6256:66;6248:75;;6241:82;;;;6228:771;6343:2;6338:1;:7;6334:665;;;6362:66;6354:75;;6347:82;;;;6334:665;6449:2;6444:1;:7;6440:559;;;6468:66;6460:75;;6453:82;;;;6440:559;6555:2;6550:1;:7;6546:453;;;6574:66;6566:75;;6559:82;;;;6546:453;6661:2;6656:1;:7;6652:347;;;6680:66;6672:75;;6665:82;;;;6652:347;6767:2;6762:1;:7;6758:241;;;6786:66;6778:75;;6771:82;;;;6758:241;6873:2;6868:1;:7;6864:135;;;6892:66;6884:75;;6877:82;;;;6864:135;6970:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3526:3478;;;;:::o;333:114::-;370:77;333:114;:::o;483:31::-;;;:::o;833:49::-;;;;;;;;;;;;;;;;;:::o;1017:27::-;;;;;;;;;;;;;:::o;461:641:4:-;665:1;652:9;:14;644:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;750:1;739:7;:12;731:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;818:12;836:10;:15;;875:4;860:12;;:19;836:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;817:68;;;900:7;892:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;967:1;960:4;:8;956:141;;;993:8;:13;;1015:4;993:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;979:46;;;;;1042:7;1034:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;956:141;461:641;;;;;:::o;1947:888:2:-;1997:12;2017:17;2037:9;;;;;;;;;;;2017:29;;2085:6;;;;;;;;;;2074:17;;2081:1;2074:17;;;2060:31;;:10;:31;;;;2052:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2150:19;2172:10;2150:32;;2188:24;2215:5;2188:32;;2226:12;2244:13;2269:8;2264:360;2287:6;;;;;;;;;;2283:10;;:1;:10;;;2264:360;;;2332:1;2327;2312:12;:16;;;;;;;;:21;;;2308:224;;;2352:16;2345:23;;2386:8;2392:1;2386:8;;:5;:8::i;:::-;2378:16;;2424;2404:14;:17;2419:1;2404:17;;;;;;;;;;;;;:36;;;;2308:224;;;2472:14;:17;2487:1;2472:17;;;;;;;;;;;;;;2465:24;;2507:16;2499:24;;2308:224;2558:34;2572:6;2580:4;2586:5;2558:13;:34::i;:::-;2539:53;;2616:1;2600:17;;;;;;;;;;;2295:3;;;;;;;2264:360;;;;2630:19;973:2;2652:42;;2672:1;2653:16;;;;;;;;;;;:20;2652:42;;;;;;;;2630:64;;2719:12;2700:16;;:31;;;;;;;;;;;;;;;;;;2759:16;2737:5;:19;2743:12;2737:19;;;;;;;;;;;;;:38;;;;2806:1;2793:10;:14;2781:9;;:26;;;;;;;;;;;;;;;;;;2820:10;2813:17;;;;;;;;1947:888;;;:::o;303:152:4:-;376:12;;363:9;:25;355:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;303:152::o",
  "source": "pragma solidity ^0.7.0;\r\n\r\nimport \"./Alphaprotect.sol\";\r\n\r\ncontract TRXAlphaProtect is AlphaProtect {\r\n  constructor(\r\n    IVerifier _verifier,\r\n    IHasher _hasher,\r\n    uint256 _denomination,\r\n    uint32 _merkleTreeHeight\r\n  ) AlphaProtect(_verifier, _hasher, _denomination, _merkleTreeHeight){}\r\n\r\n  function _processDeposit() internal override {\r\n    require(msg.value == denomination, \"Please send `mixDenomination` TRX along with transaction\");\r\n  }\r\n\r\n  function _processWithdraw(\r\n    address payable _recipient,\r\n    address payable _relayer,\r\n    uint256 _fee,\r\n    uint256 _refund\r\n  ) internal override {\r\n    // sanity checks\r\n    require(msg.value == 0, \"Message value is supposed to be zero for ETH instance\");\r\n    require(_refund == 0, \"Refund value is supposed to be zero for ETH instance\");\r\n\r\n    (bool success, ) = _recipient.call{ value: denomination - _fee }(\"\");\r\n    require(success, \"payment to _recipient did not go thru\");\r\n    if (_fee > 0) {\r\n      (success, ) = _relayer.call{ value: _fee }(\"\");\r\n      require(success, \"payment to _relayer did not go thru\");\r\n    }\r\n  }\r\n}",
  "sourcePath": "D:/metabox/contracts/TRXAlphaProtect.sol",
  "ast": {
    "absolutePath": "/D/metabox/contracts/TRXAlphaProtect.sol",
    "exportedSymbols": {
      "AlphaProtect": [
        573
      ],
      "IHasher": [
        587
      ],
      "IVerifier": [
        302
      ],
      "MerkleTreeWithHistory": [
        1242
      ],
      "ReentrancyGuard": [
        1282
      ],
      "TRXAlphaProtect": [
        1383
      ]
    },
    "id": 1384,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1284,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/D/metabox/contracts/Alphaprotect.sol",
        "file": "./Alphaprotect.sol",
        "id": 1285,
        "nodeType": "ImportDirective",
        "scope": 1384,
        "sourceUnit": 574,
        "src": "27:28:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1286,
              "name": "AlphaProtect",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 573,
              "src": "87:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AlphaProtect_$573",
                "typeString": "contract AlphaProtect"
              }
            },
            "id": 1287,
            "nodeType": "InheritanceSpecifier",
            "src": "87:12:4"
          }
        ],
        "contractDependencies": [
          573,
          1242,
          1282
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1383,
        "linearizedBaseContracts": [
          1383,
          573,
          1282,
          1242
        ],
        "name": "TRXAlphaProtect",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1304,
              "nodeType": "Block",
              "src": "295:2:4",
              "statements": []
            },
            "id": 1305,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1298,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1289,
                    "src": "242:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$302",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "id": 1299,
                    "name": "_hasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1291,
                    "src": "253:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$587",
                      "typeString": "contract IHasher"
                    }
                  },
                  {
                    "id": 1300,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1293,
                    "src": "262:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 1301,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1295,
                    "src": "277:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 1302,
                "modifierName": {
                  "id": 1297,
                  "name": "AlphaProtect",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 573,
                  "src": "229:12:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AlphaProtect_$573_$",
                    "typeString": "type(contract AlphaProtect)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "229:66:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1289,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "123:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$302",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 302,
                    "src": "123:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$302",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1291,
                  "mutability": "mutable",
                  "name": "_hasher",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "149:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHasher_$587",
                    "typeString": "contract IHasher"
                  },
                  "typeName": {
                    "id": 1290,
                    "name": "IHasher",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 587,
                    "src": "149:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$587",
                      "typeString": "contract IHasher"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1293,
                  "mutability": "mutable",
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "171:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "171:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1295,
                  "mutability": "mutable",
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "199:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "199:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "116:112:4"
            },
            "returnParameters": {
              "id": 1303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "295:0:4"
            },
            "scope": 1383,
            "src": "105:192:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              411
            ],
            "body": {
              "id": 1317,
              "nodeType": "Block",
              "src": "348:107:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1310,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "363:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "363:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1312,
                          "name": "denomination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "376:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "363:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c656173652073656e6420606d697844656e6f6d696e6174696f6e602054525820616c6f6e672077697468207472616e73616374696f6e",
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "390:58:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22e1f26a41509139159884148e8c6f6c5152d0985ef824d053ed24199abb45ec",
                          "typeString": "literal_string \"Please send `mixDenomination` TRX along with transaction\""
                        },
                        "value": "Please send `mixDenomination` TRX along with transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22e1f26a41509139159884148e8c6f6c5152d0985ef824d053ed24199abb45ec",
                          "typeString": "literal_string \"Please send `mixDenomination` TRX along with transaction\""
                        }
                      ],
                      "id": 1309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "355:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "355:94:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1316,
                  "nodeType": "ExpressionStatement",
                  "src": "355:94:4"
                }
              ]
            },
            "id": 1318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1307,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "339:8:4"
            },
            "parameters": {
              "id": 1306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "327:2:4"
            },
            "returnParameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:0:4"
            },
            "scope": 1383,
            "src": "303:152:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              513
            ],
            "body": {
              "id": 1381,
              "nodeType": "Block",
              "src": "615:487:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1331,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "652:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "652:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "665:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "652:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 1335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "668:55:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        },
                        "value": "Message value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 1330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "644:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:80:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1337,
                  "nodeType": "ExpressionStatement",
                  "src": "644:80:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1339,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1326,
                          "src": "739:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "750:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "739:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "753:54:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        },
                        "value": "Refund value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 1338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "731:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "731:77:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1344,
                  "nodeType": "ExpressionStatement",
                  "src": "731:77:4"
                },
                {
                  "assignments": [
                    1346,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1346,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1381,
                      "src": "818:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1345,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "818:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1355,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "882:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1347,
                          "name": "_recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1320,
                          "src": "836:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "836:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1349,
                            "name": "denomination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "860:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1350,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1324,
                            "src": "875:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "860:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "836:45:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "817:68:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1357,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1346,
                        "src": "900:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f2074687275",
                        "id": 1358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "909:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        },
                        "value": "payment to _recipient did not go thru"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        }
                      ],
                      "id": 1356,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "892:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "892:57:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1360,
                  "nodeType": "ExpressionStatement",
                  "src": "892:57:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1361,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1324,
                      "src": "960:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "967:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "960:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1380,
                  "nodeType": "IfStatement",
                  "src": "956:141:4",
                  "trueBody": {
                    "id": 1379,
                    "nodeType": "Block",
                    "src": "970:127:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1364,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1346,
                                "src": "980:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 1365,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "979:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 1370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1022:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "id": 1366,
                                  "name": "_relayer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1322,
                                  "src": "993:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 1367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "993:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 1368,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1324,
                                  "src": "1015:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "993:28:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "993:32:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "979:46:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1373,
                        "nodeType": "ExpressionStatement",
                        "src": "979:46:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1375,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1346,
                              "src": "1042:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7061796d656e7420746f205f72656c6179657220646964206e6f7420676f2074687275",
                              "id": 1376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1051:37:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              },
                              "value": "payment to _relayer did not go thru"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              }
                            ],
                            "id": 1374,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1034:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1034:55:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1378,
                        "nodeType": "ExpressionStatement",
                        "src": "1034:55:4"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1328,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "606:8:4"
            },
            "parameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1320,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "493:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1322,
                  "mutability": "mutable",
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "526:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1324,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "557:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1326,
                  "mutability": "mutable",
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "576:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "486:110:4"
            },
            "returnParameters": {
              "id": 1329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "615:0:4"
            },
            "scope": 1383,
            "src": "461:641:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1384,
        "src": "59:1046:4"
      }
    ],
    "src": "0:1105:4"
  },
  "legacyAST": {
    "absolutePath": "/D/metabox/contracts/TRXAlphaProtect.sol",
    "exportedSymbols": {
      "AlphaProtect": [
        573
      ],
      "IHasher": [
        587
      ],
      "IVerifier": [
        302
      ],
      "MerkleTreeWithHistory": [
        1242
      ],
      "ReentrancyGuard": [
        1282
      ],
      "TRXAlphaProtect": [
        1383
      ]
    },
    "id": 1384,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1284,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/D/metabox/contracts/Alphaprotect.sol",
        "file": "./Alphaprotect.sol",
        "id": 1285,
        "nodeType": "ImportDirective",
        "scope": 1384,
        "sourceUnit": 574,
        "src": "27:28:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1286,
              "name": "AlphaProtect",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 573,
              "src": "87:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AlphaProtect_$573",
                "typeString": "contract AlphaProtect"
              }
            },
            "id": 1287,
            "nodeType": "InheritanceSpecifier",
            "src": "87:12:4"
          }
        ],
        "contractDependencies": [
          573,
          1242,
          1282
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1383,
        "linearizedBaseContracts": [
          1383,
          573,
          1282,
          1242
        ],
        "name": "TRXAlphaProtect",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1304,
              "nodeType": "Block",
              "src": "295:2:4",
              "statements": []
            },
            "id": 1305,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1298,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1289,
                    "src": "242:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$302",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "id": 1299,
                    "name": "_hasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1291,
                    "src": "253:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$587",
                      "typeString": "contract IHasher"
                    }
                  },
                  {
                    "id": 1300,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1293,
                    "src": "262:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 1301,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1295,
                    "src": "277:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 1302,
                "modifierName": {
                  "id": 1297,
                  "name": "AlphaProtect",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 573,
                  "src": "229:12:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AlphaProtect_$573_$",
                    "typeString": "type(contract AlphaProtect)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "229:66:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1289,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "123:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$302",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 302,
                    "src": "123:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$302",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1291,
                  "mutability": "mutable",
                  "name": "_hasher",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "149:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHasher_$587",
                    "typeString": "contract IHasher"
                  },
                  "typeName": {
                    "id": 1290,
                    "name": "IHasher",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 587,
                    "src": "149:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$587",
                      "typeString": "contract IHasher"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1293,
                  "mutability": "mutable",
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "171:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "171:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1295,
                  "mutability": "mutable",
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "199:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "199:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "116:112:4"
            },
            "returnParameters": {
              "id": 1303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "295:0:4"
            },
            "scope": 1383,
            "src": "105:192:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              411
            ],
            "body": {
              "id": 1317,
              "nodeType": "Block",
              "src": "348:107:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1310,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "363:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "363:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1312,
                          "name": "denomination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "376:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "363:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c656173652073656e6420606d697844656e6f6d696e6174696f6e602054525820616c6f6e672077697468207472616e73616374696f6e",
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "390:58:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22e1f26a41509139159884148e8c6f6c5152d0985ef824d053ed24199abb45ec",
                          "typeString": "literal_string \"Please send `mixDenomination` TRX along with transaction\""
                        },
                        "value": "Please send `mixDenomination` TRX along with transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22e1f26a41509139159884148e8c6f6c5152d0985ef824d053ed24199abb45ec",
                          "typeString": "literal_string \"Please send `mixDenomination` TRX along with transaction\""
                        }
                      ],
                      "id": 1309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "355:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "355:94:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1316,
                  "nodeType": "ExpressionStatement",
                  "src": "355:94:4"
                }
              ]
            },
            "id": 1318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1307,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "339:8:4"
            },
            "parameters": {
              "id": 1306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "327:2:4"
            },
            "returnParameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:0:4"
            },
            "scope": 1383,
            "src": "303:152:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              513
            ],
            "body": {
              "id": 1381,
              "nodeType": "Block",
              "src": "615:487:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1331,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "652:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "652:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "665:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "652:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 1335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "668:55:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        },
                        "value": "Message value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 1330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "644:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:80:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1337,
                  "nodeType": "ExpressionStatement",
                  "src": "644:80:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1339,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1326,
                          "src": "739:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "750:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "739:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "753:54:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        },
                        "value": "Refund value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 1338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "731:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "731:77:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1344,
                  "nodeType": "ExpressionStatement",
                  "src": "731:77:4"
                },
                {
                  "assignments": [
                    1346,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1346,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1381,
                      "src": "818:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1345,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "818:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1355,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "882:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1347,
                          "name": "_recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1320,
                          "src": "836:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "836:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1349,
                            "name": "denomination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "860:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1350,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1324,
                            "src": "875:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "860:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "836:45:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "817:68:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1357,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1346,
                        "src": "900:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f2074687275",
                        "id": 1358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "909:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        },
                        "value": "payment to _recipient did not go thru"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        }
                      ],
                      "id": 1356,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "892:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "892:57:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1360,
                  "nodeType": "ExpressionStatement",
                  "src": "892:57:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1361,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1324,
                      "src": "960:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "967:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "960:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1380,
                  "nodeType": "IfStatement",
                  "src": "956:141:4",
                  "trueBody": {
                    "id": 1379,
                    "nodeType": "Block",
                    "src": "970:127:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1364,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1346,
                                "src": "980:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 1365,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "979:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 1370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1022:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "id": 1366,
                                  "name": "_relayer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1322,
                                  "src": "993:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 1367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "993:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 1368,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1324,
                                  "src": "1015:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "993:28:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "993:32:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "979:46:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1373,
                        "nodeType": "ExpressionStatement",
                        "src": "979:46:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1375,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1346,
                              "src": "1042:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7061796d656e7420746f205f72656c6179657220646964206e6f7420676f2074687275",
                              "id": 1376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1051:37:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              },
                              "value": "payment to _relayer did not go thru"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              }
                            ],
                            "id": 1374,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1034:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1034:55:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1378,
                        "nodeType": "ExpressionStatement",
                        "src": "1034:55:4"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1328,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "606:8:4"
            },
            "parameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1320,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "493:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1322,
                  "mutability": "mutable",
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "526:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1324,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "557:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1326,
                  "mutability": "mutable",
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "576:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "486:110:4"
            },
            "returnParameters": {
              "id": 1329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "615:0:4"
            },
            "scope": 1383,
            "src": "461:641:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1384,
        "src": "59:1046:4"
      }
    ],
    "src": "0:1105:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.d1802f25.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2022-07-16T03:24:41.742Z"
}